<?xml version="1.0" encoding="utf-8"?>
<package xmlns="http://schemas.microsoft.com/packaging/2012/06/nuspec.xsd">
  <metadata>
    <id>Structura</id>
    <version>0.9.1-beta</version>
    <title>Structura - Source Generator-Based Type Manipulation Library</title>
    <authors>dimohy</authors>
    <license type="expression">MIT</license>
    <licenseUrl>https://licenses.nuget.org/MIT</licenseUrl>
    <readme>README.md</readme>
    <projectUrl>https://github.com/dimohy/structura</projectUrl>
    <description>A .NET library that automatically generates new types through source generators when you define type creation and manipulation rules using a fluent API. Supports type combination, anonymous types, EF Core projections, advanced property manipulation, and static converter methods directly on generated types for seamless object conversion.</description>
    <releaseNotes>Version 0.9.1-beta Release Notes:
      
      🔧 Fixed Issues:
      - Fixed NuGet package structure to include both runtime library and source generator
      - TypeCombiner class is now accessible from NuGet packages
      - Resolved packaging configuration issues
      
      🚀 Features:
      - Complete anonymous type support with variable reference analysis
      - EF Core projection result type generation
      - Advanced property manipulation (Add, Exclude, ChangeType)
      - Support for Records, Classes, and Structs generation
      - 🆕 Smart Converter Extensions: Revolutionary .WithConverter() method for seamless object conversion
      - Comprehensive fluent API with method chaining
      
      🔧 Improvements:
      - Enhanced source generator performance
      - Better type inference and analysis
      - Improved error handling and validation
      - 100+ comprehensive unit tests including converter functionality
      
      🎯 Beta Features:
      - Variable reference analysis for anonymous types
      - EF Core projection support with smart conversion
      - Complex type combination scenarios
      - Intelligent type mapping and conversion
      
      🌟 Smart Converter Highlights:
      - Direct static methods on generated types: UserDto.FromCollection()
      - Strongly-typed anonymous object conversion: UserDto.FromTypedCollection()
      - Individual object conversion: UserDto.FromTyped(), UserDto.FromSingle()
      - Named type converters: CombinedType.FromSourceType(), CombinedType.FromBoth()
      - Intelligent type mapping with null safety
      - Support for primitives, collections, and complex types
      - Case-insensitive property matching
      - Compile-time type safety with full IntelliSense
      
      📋 Known Issues:
      - Some advanced property manipulation scenarios may be limited
      - Existing type property inheritance is at 95% completion
      
      For full documentation and examples, visit: https://github.com/dimohy/structura</releaseNotes>
    <copyright>Copyright (c) 2024 dimohy</copyright>
    <tags>source-generator fluent-api type-manipulation code-generation csharp dotnet types ef-core projection converter extension-methods</tags>
    <repository type="git" url="https://github.com/dimohy/structura" commit="d49dec45d72ed8fb00dec64ec9cde4933313806e" />
    <dependencies>
      <group targetFramework=".NETStandard2.0" />
    </dependencies>
  </metadata>
</package>